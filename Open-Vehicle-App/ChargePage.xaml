<Page
    x:Class="OpenVehicle.App.ChargePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:OpenVehicle.App"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:usercontrol="using:OpenVehicle.App.UserControl"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>


            <!-- TODO: Hide individual lines when they do not contain valid data for the current car model -->
            
            <StackPanel 
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="0"
                Orientation="Vertical"
                VerticalAlignment="Center"
                Margin="20"
                >

                <!-- only visible when NOT charging -->
                <StackPanel 
                    Orientation="Vertical"
                    Visibility="{x:Bind CarData.env_charging, Converter={StaticResource booleanNegationToVisibilityConverter}, Mode=OneWay}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                >

                    <usercontrol:ChargePageItem IsCaption="true" LabelText="Not Charging" ButtonText="Start" ButtonClick="OnChargeStart" />
                </StackPanel>

                <!-- Only visible when charging -->
                <StackPanel 
                    Orientation="Vertical"
                    Visibility="{x:Bind CarData.env_charging, Converter={StaticResource booleanToVisibilityConverter}, Mode=OneWay}"
                >

                    <usercontrol:ChargePageItem IsCaption="true" LabelText="Charging" ButtonText="Stop" ButtonClick="OnChargeStop" />
                    <usercontrol:ChargePageItem LabelText="State" ValueText="{x:Bind CarData.charge_state, Mode=OneWay}" />
                    <usercontrol:ChargePageItem LabelText="Sub state" ValueText="{x:Bind CarData.charge_substate, Mode=OneWay}" />
                    <usercontrol:ChargePageItem LabelText="Mode" ValueText="{x:Bind CarData.charge_mode, Mode=OneWay}" />

                    <usercontrol:ChargePageItem LabelText="Duration" ValueText="{x:Bind FormatMins(CarData.charge_duration), Mode=OneWay}" Padding="0,20,0,0" />
                    <usercontrol:ChargePageItem LabelText="Estimate" ValueText="{x:Bind FormatMins(CarData.charge_estimate), Mode=OneWay}" />

                    <usercontrol:ChargePageItem LabelText="Type" ValueText="{x:Bind CarData.charge_plugtype, Mode=OneWay}" Padding="0,20,0,0" />
                    <usercontrol:ChargePageItem LabelText="Current" ValueText="{x:Bind CarData.charge_current, Mode=OneWay}" />
                    <usercontrol:ChargePageItem LabelText="Voltage" ValueText="{x:Bind CarData.charge_voltage, Mode=OneWay}" />
                    <usercontrol:ChargePageItem LabelText="Consumed" ValueText="{x:Bind CarData.charge_kwhconsumed, Mode=OneWay}" />

                    <usercontrol:ChargePageItem IsCaption="True" LabelText="Remaining" Visibility="{x:Bind CarData.env_charging, Converter={StaticResource booleanToVisibilityConverter}, Mode=OneWay}" Padding="0,20,0,0" />
                    <usercontrol:ChargePageItem IsCaption="True" LabelText="Duration" Visibility="{x:Bind CarData.env_charging, Converter={StaticResource booleanNegationToVisibilityConverter}, Mode=OneWay}" Padding="0,20,0,0" />
                    <usercontrol:ChargePageItem LabelText="{x:Bind FormatMins(CarData.charge_full_minsremaining), Mode=OneWay}" ValueText="until full" />
                    <usercontrol:ChargePageItem LabelText="{x:Bind FormatMins(CarData.charge_limit_minsremaining_soc), Mode=OneWay}" ValueText="{x:Bind FormatUntil(CarData.charge_limit_soclimit), Mode=OneWay}" />
                    <usercontrol:ChargePageItem LabelText="{x:Bind FormatMins(CarData.charge_limit_minsremaining_range), Mode=OneWay}" ValueText="{x:Bind FormatUntil(CarData.charge_limit_rangelimit), Mode=OneWay}" />
                    
                </StackPanel>

                <!-- Visible both whether or not charging, but only when a timer is NOT set -->
                <StackPanel 
                    Orientation="Vertical"
                    Visibility="{x:Bind CarData.charge_timer, Converter={StaticResource booleanNegationToVisibilityConverter}, Mode=OneWay}"
                    >

                    <usercontrol:ChargePageItem IsCaption="true" LabelText="Timer" ValueText="off" Padding="0,20,0,0" />
                </StackPanel>

                <!-- Visible both whether or not charging, but only when a timer is set -->
                <StackPanel 
                    Orientation="Vertical"
                    Visibility="{x:Bind CarData.charge_timer, Converter={StaticResource booleanToVisibilityConverter}, Mode=OneWay}"
                    >

                    <usercontrol:ChargePageItem IsCaption="true" LabelText="Timer" Padding="0,20,0,0" />
                    <usercontrol:ChargePageItem LabelText="Timer" ValueText="{x:Bind CarData.charge_timer, Mode=OneWay}" />
                    <usercontrol:ChargePageItem LabelText="At" ValueText="{x:Bind CarData.charge_time, Mode=OneWay}" />
                    <usercontrol:ChargePageItem LabelText="Before" ValueText="{x:Bind CarData.charge_b4, Mode=OneWay}" />
                </StackPanel>

            </StackPanel>


            <Image 
                Grid.Row="0"
                Grid.Column="1"
                x:Name="CarImage"
                Source="{x:Bind CarSettings.vehicle_image_resourcename, Converter={StaticResource manifestResourceNameToImageSourceConverter}, Mode=OneWay}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" 
                Stretch="Uniform" 
                Margin="20"
                RenderTransformOrigin="0.5,0.5"
                >

                <Image.RenderTransform>
                    <ScaleTransform ScaleX="-1" ></ScaleTransform>
                </Image.RenderTransform>

            </Image>


            <Image
                Grid.Row="1"
                Grid.Column="1"
                x:Name="PlugImage"
                Source="ms-appx:///Assets/Misc/charger_plug.png"
                Stretch="Uniform" 
                Height="100"
                HorizontalAlignment="Left"
                />



            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState>
                        <VisualState.StateTriggers>
                            <!-- VisualState to be triggered when window
                                 width is >=720 effective pixels. -->
                            <AdaptiveTrigger MinWindowWidth="720" />
                        </VisualState.StateTriggers>

                        <VisualState.Setters>
                            <Setter Target="PlugImage.Height" Value="100" />
                        </VisualState.Setters>
                    </VisualState>

                    <VisualState>
                        <VisualState.StateTriggers>
                            <!-- VisualState to be triggered when window
                                 width is < 720 effective pixels. -->
                            <AdaptiveTrigger MinWindowWidth="0" />
                        </VisualState.StateTriggers>

                        <VisualState.Setters>
                            <Setter Target="PlugImage.Height" Value="60" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

        </Grid>
    </ScrollViewer>
</Page>
